const { resolve } = require('path')
const { Bot } = require('./bot')
const { parseFile } = require('./coverage/parse')
const { format } = require('./coverage/format')

exports.postComment = function postComment ({
  coverageJsonFilename = 'coverage/coverage-final.json',
  coverageHtmlRoot = 'coverage/lcov-report',
  defaultBaseBranch = 'master',
  root = process.cwd()
}) {
  const bot = Bot.create()

  const coverage = parseFile(root, resolve(root, coverageJsonFilename))

  const branch = bot.getBaseBranch(defaultBaseBranch)
  const { priorCoverage, priorBuild } = bot.getPriorBuild(branch, coverageJsonFilename)

  if (!priorCoverage) {
    console.log(`No prior coverage found`)
  }

  const {
    status,
    changed,
    folders
  } = format(coverage, priorCoverage, bot.artifactUrl(`/${coverageHtmlRoot}`))

  const priorBuildUrl = process.env.CIRCLE_BUILD_URL.replace(/\/\d+$/, `/${priorBuild}`)
  const result = JSON.parse(bot.comment(`
**[Code Coverage](${bot.artifactUrl(`/${coverageHtmlRoot}/index.html`)}): ${status}** 
${changed}
<details>
<summary>Folder Coverage</summary>
${folders}
</details>
From Circle CI [build ${process.env.CIRCLE_BUILD_NUM}](${process.env.CIRCLE_BUILD_URL})
  ${priorBuild
    ? `(compared to [build ${priorBuild}](${priorBuildUrl}) of \`${branch}\` branch)`
    : ''} â€” generated by [coverage-github-reporter](https://github.com/vivlabs/coverage-github-reporter)
`))
  return result && result.html_url
}
